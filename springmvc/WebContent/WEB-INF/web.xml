<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" >
    
    <display-name>springmvcDemo测试</display-name>
    <servlet>
		<!--     springmvc的核心是dispatcherServlet他负责控制整个页面的请求路径 -->
    	<servlet-name>spring</servlet-name>
    	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- load-on-startup:表示容器启动时初始化该servlet; -->
    	<load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
    	<servlet-name>spring</servlet-name>
    	<!-- url-pattern：表示哪些请求交给Spring Web MVC处理， “/” 是用来定义默认servlet映射的。 -->  
        <!-- 也可以如“*.html”表示拦截所有以html为扩展名的请求。 -->  
    	<url-pattern>/</url-pattern>
    </servlet-mapping>
    
<!--     <context-param> -->
<!--         <param-name>contextConfigLocation</param-name> -->
<!--         <param-value>/WEB-INF/spring-servlet.xml</param-value> -->
<!--     </context-param> -->
 
<!--     <listener>     -->
<!--         <listener-class> -->
<!--             org.springframework.web.context.ContextLoaderListener -->
<!--         </listener-class> -->
<!--     </listener> -->
    
<!--     <welcome-file-list> -->
<!--     	<welcome-file>index.jsp</welcome-file> -->
<!--     </welcome-file-list> -->
    
    
    <!-- 自此请求已交给Spring Web MVC框架处理，因此我们需要配置Spring的配置文件， -->  
    <!-- 默认DispatcherServlet会加载WEB-INF/[DispatcherServlet的Servlet名字,也就是上面的spring]-servlet.xml配置文件。 -->  
    <!-- 即spring-servlet.xml -->  
</web-app>